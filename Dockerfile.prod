###########
# BUILDER #
###########

# pull official base image
#FROM python:3.11.4-slim-buster as builder
FROM python:3.13-bookworm AS builder
# set work directory
#WORKDIR /usr/src/app
WORKDIR /usr/src/polls
# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends gcc

# lint
RUN pip install --upgrade pip
RUN pip install flake8==7.2.0
COPY . /usr/src/polls/
RUN flake8 --ignore=E501,F401 .

# install python dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/polls/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
#FROM python:3.11.4-slim-buster
FROM python:3.13-bookworm
# create directory for the app user
RUN mkdir -p /home/polls

# create the app user
RUN addgroup --system polls && adduser --system --group polls

# create the appropriate directories
ENV HOME=/home/polls
ENV APP_HOME=/home/polls/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends netcat-openbsd
COPY --from=builder /usr/src/polls/wheels /wheels
COPY --from=builder /usr/src/polls/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R polls:polls $APP_HOME

# change to the app user
USER polls

# run entrypoint.prod.sh
ENTRYPOINT ["/home/polls/web/entrypoint.prod.sh"]
